{% set version = '1.7-3' %}  # [linux or win32]
{% set version = '1.7-3' %}  # [win64]
{% set version = '1.7-3' %}  # [osx]

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rserve
  version: {{ version|replace("-", "_") }}

source:
    url:  # [linux or win32]
    - {{ cran_mirror }}/src/contrib/Rserve_{{ version }}.tar.gz  # [linux or win32]
    - {{ cran_mirror }}/src/contrib/Archive/Rserve/Rserve_{{ version }}.tar.gz  # [linux or win32]
  sha256: f6d636c736c3f16487d9987e54554fe0c55257b9bc0671b43e536d832e513027  # [linux or win32]

  url: https://cran.microsoft.com/snapshot/2018-04-23/bin/windows/contrib/3.5/Rserve_1.7-3.zip  # [win64]
  sha256: a462c4990bae8f25314c276cd4bda9aa1054ba0df59d9a9ef60f2af673a39efe  # [win64]

  url: https://cran.microsoft.com/snapshot/2018-04-23/bin/macosx/el-capitan/contrib/3.5/Rserve_1.7-3.tgz  # [osx]
  sha256: 8e83d6f39bc77b2e6738ad64d0657daf025fc3bdf822c640fceccd7cf4017801  # [osx]

build:
  merge_build_host: True  # [win32]
  # If this is a new build for the same version, increment the build number.
  number: 0

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: RSclient
requirements:
  build:
    - {{ compiler('c') }}        # [linux]
    - {{ compiler('cxx') }}      # [linux]
    - {{native}}toolchain        # [win32]
    - {{posix}}filesystem        # [win32]
    - {{posix}}sed               # [win32]
    - {{posix}}grep              # [win32]
    - {{posix}}autoconf          # [linux or win32]
    - {{posix}}automake          # [linux]
    - {{posix}}automake-wrapper  # [win32]
    - {{posix}}pkg-config
    - {{posix}}make              # [linux or win32]
    - {{posix}}coreutils         # [win32]
    - {{posix}}zip               # [win32]

  host:
    - mro-base

  run:
    - mro-base
    - {{native}}gcc-libs         # [win32]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('Rserve')"           # [not win]
    - "\"%R%\" -e \"library('Rserve')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://www.rforge.net/Rserve/
  license: GPL-2 | file LICENSE
  summary: Rserve acts as a socket server (TCP/IP or local sockets)  which allows binary requests
    to be sent to R. Every connection has a separate workspace and working directory.
    Client-side implementations are available for popular languages such as C/C++ and
    Java, allowing any application to use facilities of R without the need of linking
    to R code. Rserve supports remote connection, user authentication and file transfer.
    A simple R client is included in this package as well.
  license_family: GPL2

extra:
  recipe-maintainers:
    - mingwandroid

# The original CRAN metadata for this package was:

# Package: Rserve
# Version: 1.7-3
# Title: Binary R server
# Author: Simon Urbanek <Simon.Urbanek@r-project.org>
# Maintainer: Simon Urbanek <Simon.Urbanek@r-project.org>
# Depends: R (>= 1.5.0)
# Suggests: RSclient
# SystemRequirements: libR, GNU make
# Description: Rserve acts as a socket server (TCP/IP or local sockets)  which allows binary requests to be sent to R. Every connection has a separate workspace and working directory. Client-side implementations are available for popular languages such as C/C++ and Java, allowing any application to use facilities of R without the need of linking to R code. Rserve supports remote connection, user authentication and file transfer. A simple R client is included in this package as well.
# License: GPL-2 | file LICENSE
# URL: http://www.rforge.net/Rserve/
# NeedsCompilation: yes
# Repository: CRAN
# Date/Publication: 2013-08-21 23:35:21

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
