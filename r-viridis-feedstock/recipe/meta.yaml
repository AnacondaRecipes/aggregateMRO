{% set version = '0.4.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-viridis
  version: {{ version|replace("-", "_") }}

source:
  fn: viridis_0.4.0.tar.gz  # [linux or win32]
  url:  # [linux or win32]
    - {{ cran_mirror }}/src/contrib/viridis_0.4.0.tar.gz  # [linux or win32]
    - {{ cran_mirror }}/src/contrib/Archive/viridis/viridis_0.4.0.tar.gz  # [linux or win32]
  sha256: 93d2ded68ed7cec5633c260dbc47051416147aae074f29ebe135cc329250b00e  # [linux or win32]




  url:  {{ cran_mirror }}/bin/windows/contrib/3.4/viridis_0.4.0.zip  # [win64]
  sha256: d6160c5b167b3524302e52772eed4a97fe9bec9f48288487083b95529b4f2699  # [win64]

  url:  {{ cran_mirror }}/bin/macosx/el-capitan/contrib/3.4/viridis_0.4.0.tgz  # [osx]
  sha256: c9d259defebafb2cc9d441f30dd34c6273f5fdf74a9eda2aa9f171ebe2bff939  # [osx]


build:
  merge_build_host: True  # [win32]
  # If this is a new build for the same version, increment the build number.
  number: 0


  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: hexbin (>= 1.27.0), scales, MASS, knitr, dichromat, colorspace, rasterVis, httr, mapproj, vdiffr, svglite (>= 1.2.0), testthat, covr, rmarkdown
requirements:
  build:

  host:
    - mro-base
    - r-ggplot2 >=1.0.1
    - r-gridextra
    - r-viridislite >=0.2.0

  run:
    - mro-base
    - r-ggplot2 >=1.0.1
    - r-gridextra
    - r-viridislite >=0.2.0

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('viridis')"           # [not win]
    - "\"%R%\" -e \"library('viridis')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/sjmgarnier/viridis
  license: MIT + file LICENSE
  summary: Port of the new 'matplotlib' color maps ('viridis' - the default -, 'magma', 'plasma'
    and 'inferno') to 'R'. 'matplotlib' <http://matplotlib.org/ > is a popular plotting
    library for 'python'. These color maps are designed in such a way that they will
    analytically be perfectly perceptually-uniform, both in regular form and also when
    converted to black-and-white. They are also designed to be perceived by readers
    with the most common form of color blindness.
  license_family: MIT

extra:
  recipe-maintainers:
    - mingwandroid

# The original CRAN metadata for this package was:

# Package: viridis
# Type: Package
# Title: Default Color Maps from 'matplotlib'
# Version: 0.4.0
# Authors@R: c( person("Simon", "Garnier", email = "garnier@njit.edu", role = c("aut", "cre")), person("Noam", "Ross", email = "noam.ross@gmail.com", role = c("ctb", "cph")), person("Bob", "Rudis", email = "bob@rud.is", role = c("ctb", "cph")) )
# Maintainer: Simon Garnier <garnier@njit.edu>
# Description: Port of the new 'matplotlib' color maps ('viridis' - the default -, 'magma', 'plasma' and 'inferno') to 'R'. 'matplotlib' <http://matplotlib.org/ > is a popular plotting library for 'python'. These color maps are designed in such a way that they will analytically be perfectly perceptually-uniform, both in regular form and also when converted to black-and-white. They are also designed to be perceived by readers with the most common form of color blindness.
# License: MIT + file LICENSE
# LazyData: TRUE
# Encoding: UTF-8
# Depends: R (>= 2.10), viridisLite (>= 0.2.0)
# Imports: stats, ggplot2 (>= 1.0.1), gridExtra
# Suggests: hexbin (>= 1.27.0), scales, MASS, knitr, dichromat, colorspace, rasterVis, httr, mapproj, vdiffr, svglite (>= 1.2.0), testthat, covr, rmarkdown
# VignetteBuilder: knitr
# URL: https://github.com/sjmgarnier/viridis
# BugReports: https://github.com/sjmgarnier/viridis/issues
# RoxygenNote: 6.0.1
# NeedsCompilation: no
# Packaged: 2017-03-27 03:03:30 UTC; simon
# Author: Simon Garnier [aut, cre], Noam Ross [ctb, cph], Bob Rudis [ctb, cph]
# Repository: CRAN
# Date/Publication: 2017-03-27 14:09:22 UTC

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
