{% set version = '1.0.4' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-nloptr
  version: {{ version|replace("-", "_") }}

source:
  fn: nloptr_1.0.4.tar.gz  # [linux or win32]
  url:  # [linux or win32]
    - {{ cran_mirror }}/src/contrib/nloptr_1.0.4.tar.gz  # [linux or win32]
    - {{ cran_mirror }}/src/contrib/Archive/nloptr/nloptr_1.0.4.tar.gz  # [linux or win32]
  sha256: 84225b993cb1ef7854edda9629858662cc8592b0d1344baadea4177486ece1eb  # [linux or win32]




  url:  {{ cran_mirror }}/bin/windows/contrib/3.4/nloptr_1.0.4.zip  # [win64]
  sha256: f258a0fc39c4d0a9a65aa78ecc157e37af940bd64a442b940477763adc356e23  # [win64]

  url:  {{ cran_mirror }}/bin/macosx/el-capitan/contrib/3.4/nloptr_1.0.4.tgz  # [osx]
  sha256: 7d5865f1f77b1566aeacbef3927d2833e0e296bada979f669cf49700eb697d33  # [osx]


build:
  merge_build_host: True  # [linux or win32]
  # If this is a new build for the same version, increment the build number.
  number: 0


  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat (>= 0.8.1)
requirements:
  build:
    - {{ compiler('c') }}          # [linux]
    - {{ compiler('cxx') }}        # [linux]
    - {{native}}toolchain          # [win32]
    - {{posix}}filesystem          # [win32]
    - {{posix}}sed                 # [win32]
    - {{posix}}grep                # [win32]
    - {{posix}}autoconf            # [linux or win32]
    - {{posix}}automake-wrapper    # [win32]
    - {{posix}}automake            # [win32]
    - {{posix}}pkg-config
    - {{posix}}make                # [linux or win32]

  host:
    - mro-base
    - {{native}}nlopt              # [win32]

  run:
    - mro-base
    - {{native}}gcc-libs           # [win32]
    - {{native}}nlopt              # [win32]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('nloptr')"           # [not win]
    - "\"%R%\" -e \"library('nloptr')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=nloptr
  license: LGPL-3
  summary: ' nloptr is an R interface to NLopt. NLopt is a free/open-source library for nonlinear
    optimization, providing a common interface for a number of different free optimization
    routines available online as well as original implementations of various other algorithms.
    See http://ab-initio.mit.edu/wiki/index.php/NLopt_Introduction for more information
    on the available algorithms. During installation on Unix the NLopt code is downloaded
    and compiled from the NLopt website.'

  license_family: LGPL

extra:
  recipe-maintainers:
    - mingwandroid

# The original CRAN metadata for this package was:

# Package: nloptr
# Type: Package
# Title: R interface to NLopt
# Version: 1.0.4
# Date: 2014-08-02
# Author: Jelmer Ypma <uctpjyy@ucl.ac.uk>, with contributions by Hans W. Borchers <hwborchers@googlemail.com> and  Dirk Eddelbuettel <edd@debian.org>
# Maintainer: Jelmer Ypma <uctpjyy@ucl.ac.uk>
# Description:  nloptr is an R interface to NLopt. NLopt is a free/open-source library for nonlinear optimization, providing a common interface for a number of different free optimization routines available online as well as original implementations of various other algorithms. See http://ab-initio.mit.edu/wiki/index.php/NLopt_Introduction for more information on the available algorithms. During installation on Unix the NLopt code is downloaded and compiled from the NLopt website.
# License: LGPL-3
# Suggests: testthat (>= 0.8.1)
# LazyLoad: yes
# Packaged: 2017-08-22 10:59:12 UTC; ripley
# NeedsCompilation: yes
# Repository: CRAN
# Date/Publication: 2017-08-22 13:02:45

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
