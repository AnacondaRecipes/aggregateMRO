{% set version = '0.15.3' %}  # [linux or win32]
{% set version = '0.15.3' %}  # [win64]
{% set version = '0.15.3' %}  # [osx]

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rgexf
  version: {{ version|replace("-", "_") }}

source:
  url:  # [linux or win32]
    - {{ cran_mirror }}/src/contrib/rgexf_{{ version }}.tar.gz  # [linux or win32]
    - {{ cran_mirror }}/src/contrib/Archive/rgexf/rgexf_{{ version }}.tar.gz  # [linux or win32]
  sha256: 2e8a7978d1fb977318e6310ba65b70a9c8890185c819a7951ac23425c6dc8147  # [linux or win32]

  url: https://cran.microsoft.com/snapshot/2018-08-01/bin/windows/contrib/3.5/rgexf_0.15.3.zip  # [win64]
  sha256: 910043dde5ebd938cc2460fa2efc64e96d949b0e456425dccabdd3317b873584  # [win64]

  url: https://cran.microsoft.com/snapshot/2018-08-01/bin/macosx/el-capitan/contrib/3.5/rgexf_0.15.3.tgz  # [osx]
  sha256: 32c5bbd0e98be0613039c3eaa960a8488389698ab982501934f44a945a3adcb8  # [osx]

build:
  merge_build_host: True  # [win32]
  # If this is a new build for the same version, increment the build number.
  number: 0

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}        # [linux]
    - rtools                     # [win32]
    - {{posix}}zip               # [win32]

  host:
    - mro-base
    - r-rook
    - r-xml
    - r-igraph

  run:
    - mro-base
    - r-rook
    - r-xml
    - r-igraph

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('rgexf')"           # [not win]
    - "\"%R%\" -e \"library('rgexf')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://bitbucket.org/gvegayon/rgexf, http://www.ggvega.com
  license: GPL (>= 3)
  summary: Create, read and write GEXF (Graph Exchange XML Format) graph files (used in Gephi
    and others). Using the XML package, it allows the user to easily build/read graph
    files including attributes, GEXF viz attributes (such as color, size, and position),
    network dynamics (for both edges and nodes) and edge weighting. Users can build/handle
    graphs element-by-element or massively through data-frames, visualize the graph
    on a web browser through "sigmajs" (a javascript library) and interact with the
    igraph package.
  license_family: GPL3

extra:
  recipe-maintainers:
    - mingwandroid

# The original CRAN metadata for this package was:

# Package: rgexf
# Type: Package
# Encoding: UTF-8
# Title: Build, Import and Export GEXF Graph Files
# Version: 0.15.3
# Date: 2015-03-24
# Author: George Vega Yon <gvegayon@caltech.edu> [aut], Jorge FAbrega Lacoa <jorge.fabrega@uai.cl> [ctb], Joshua B. Kunst <jbkunst@gmail.com> [ctb]
# Maintainer: George Vega Yon <gvegayon@caltech.edu>
# Description: Create, read and write GEXF (Graph Exchange XML Format) graph files (used in Gephi and others). Using the XML package, it allows the user to easily build/read graph files including attributes, GEXF viz attributes (such as color, size, and position), network dynamics (for both edges and nodes) and edge weighting. Users can build/handle graphs element-by-element or massively through data-frames, visualize the graph on a web browser through "sigmajs" (a javascript library) and interact with the igraph package.
# URL: http://bitbucket.org/gvegayon/rgexf, http://www.ggvega.com
# Depends: XML, Rook, igraph
# License: GPL (>= 3)
# LazyLoad: yes
# Packaged: 2015-03-24 15:40:34 UTC; george
# NeedsCompilation: yes
# Repository: CRAN
# Date/Publication: 2015-03-24 18:27:03

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
